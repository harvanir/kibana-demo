version: '2.2'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: kibana-demo_elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=docker-cluster
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    network_mode: host
    restart: on-failure
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: kibana-demo_kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: on-failure
    environment:
      ELASTICSEARCH_URL: http://localhost:9200
      ELASTICSEARCH_HOSTS: http://localhost:9200
    ports:
      - 5601:5601
    network_mode: host
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.10.2
    container_name: kibana-demo_apm-server
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: [ "CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID" ]
    cap_drop: [ "ALL" ]
    ports:
      - 8200:8200
    network_mode: host
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=localhost:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=localhost:5601
        -E output.elasticsearch.hosts=["localhost:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.10.2
    container_name: kibana-demo_metricbeat
    user: root
    network_mode: host
    logging:
      options:
        max-file: "3"
        max-size: "50m"
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /:/hostfs:ro
      - ./metricbeat/modules.d/:/usr/share/metricbeat/modules.d/
    command: metricbeat -E output.elasticsearch.hosts=["localhost:9200"]
    restart: on-failure
    depends_on:
      elasticsearch: { condition: service_healthy }

  spring-boot-web:
    build:
      context: ./
      dockerfile: ./app/java/spring-boot-web/Dockerfile
    image: kibana-demo_spring-boot-web
    container_name: kibana-demo_spring-boot-web
    ports:
      - 8080:8080
    network_mode: host
    depends_on:
      elasticsearch:
        condition: service_healthy
      apm-server:
        condition: service_healthy
    ulimits:
      nproc: 514933
      nofile:
        soft: 100000
        hard: 100000
    sysctls:
      net.core.somaxconn: 32768
      net.ipv4.tcp_rmem: 4096 87380 134217728
      net.ipv4.tcp_wmem: 4096 87380 134217728
      net.ipv4.tcp_moderate_rcvbuf: 1
      net.ipv4.tcp_no_metrics_save: 1
      net.ipv4.tcp_congestion_control: htcp
      net.ipv4.tcp_mtu_probing: 1
      net.ipv4.tcp_timestamps: 0
      net.ipv4.tcp_sack: 0
      net.ipv4.tcp_syncookies: 1
      net.ipv4.tcp_max_syn_backlog: 4096
      net.ipv4.tcp_fin_timeout: 5
      net.ipv4.tcp_tw_reuse: 1
      net.ipv4.ip_local_port_range: 1025 65000
    environment:
      JVM_OPT: |-
        -XX:+UseG1GC
        -XX:+ExitOnOutOfMemoryError
        -Xms80m -Xmx80m
        -Xlog:gc:GC.log -XX:+UseStringDeduplication
        -javaagent:elastic-apm-agent-1.20.0.jar
        -Delastic.apm.service_name=spring-boot-web
        -Delastic.apm.service_node_name=spring-boot-web
        -Delastic.apm.server_urls=http://localhost:8200